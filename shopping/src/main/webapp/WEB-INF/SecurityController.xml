<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<context:component-scan base-package="com.niit.*" />

	<security:http auto-config="true" use-expressions="true">
		<!-- <security:intercept-url pattern="/login/**"
			access="hasRole('ROLE_USER')" />
 -->
		<security:form-login 
		login-processing-url="/loginpage"
			default-target-url="/afterlogin" 
			authentication-failure-url="/getlogin?error"     
			username-parameter="un"
			password-parameter="password" />
		<security:logout logout-success-url="/getlogin?logout" logout-url="/j_spring_security_logout"/>
		
		<security:csrf disabled="true" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="datasource" 
			authorities-by-username-query="SELECT un, role From Role WHERE un = ?"
			users-by-username-query="SELECT un, password,enabled FROM User WHERE un = ?" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>